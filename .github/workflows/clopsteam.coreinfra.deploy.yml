name: 'CloudOps Team - CoreInfra Deploy'

on:
  workflow_dispatch:
    inputs:
      removeDeployment:
        type: boolean
        description: 'Remove the deployment instead of deploying it'
        required: false
        default: false
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - '.github/workflows/coreinfra.deploy.yml'
  #     - 'CoreInfra/**'

env:
  scope: 'subscription'
  resourceGroupName: 'CoreInfraBicepLive'
  solutionPath: 'CoreInfra'
  solutionDeploymentParamsPath: 'parameters/clopsTeam.json'
  workflowPath: '.github/workflows/clopsteam.coreinfra.deploy.yml'
  
jobs:
  job_static_validation:
    name: 'Preflight Validation'
    environment: stg
    defaults:
      run:
        working-directory: ${{ env.solutionPath }}
    runs-on: ubuntu-latest
    steps:
      # Checkout code
    - uses: actions/checkout@v3
    - uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - uses: azure/arm-deploy@v1
      name: Run preflight validation
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        scope: ${{ env.scope }}
        template: 'main.bicep'
        parameters: ${{ env.solutionDeploymentParamsPath }} environment=stg
        deploymentMode: Validate
        additionalArguments: "--what-if --rollback-on-error --what-if-exclude-change-types Create Ignore"

  job_deploy_to_staging:
    defaults:
      run:
        working-directory: ${{ env.solutionPath }}
    environment: stg
    runs-on: ubuntu-latest
    name: 'Deploy to Staging for Validation'
    steps:

    # Checkout code
    - uses: actions/checkout@v3
    - uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  
    # Deploy Bicep file
    - name: deploy
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        scope: ${{ env.scope }}
        template: 'main.bicep'
        parameters: ${{ env.solutionDeploymentParamsPath }} environment=stg
        failOnStdErr: false
        deploymentMode: Complete
        
    - run: echo ${{ steps.deploy.outputs }}
